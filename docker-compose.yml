services:
  mlflow:
    build:
      context: .
      dockerfile: mlflow-boto3.Dockerfile
    container_name: mlflow
    ports:
      - "8080:8080"
    command: >
      mlflow server
      --host 0.0.0.0
      --port 8080
      --default-artifact-root s3://mlflow/
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    env_file:
      - ./.env
    depends_on:
      - postgres
      - minio

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - ./.env
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server /data --console-address ":9001"

  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d:Z
    restart: unless-stopped
  
  # app:
  #   build:
  #     context: .
  #     dockerfile: app.Dockerfile
  #   env_file:
  #     - ./app.env
  #   container_name: ml_app
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - mlflow